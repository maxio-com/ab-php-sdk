name: PHP Composer

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install sdk dependencies
      run: composer install --prefer-dist --no-progress

  cleanup_site_before_tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Cleanup Site
        run: ./cleanupSite.sh
        env:
          BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
          BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
          SUB_DOMAIN: ${{ secrets.SUB_DOMAIN }}
          DOMAIN: ${{ secrets.DOMAIN }}

      - name: Wait 10 seconds to allow site be cleared
        run: sleep 10


  run_tests:
    runs-on: ubuntu-latest
    needs: cleanup_site_before_tests

    steps:
      - uses: actions/checkout@v3

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: tests/vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install sdk dependencies
        run: composer install --prefer-dist --no-progress

      - name: Install test dependencies
        run: composer install --prefer-dist --no-progress --working-dir=tests

      - name: Run test suite
        run: ./tests/vendor/bin/phpunit -c ./tests/phpunit.xml
        env:
          BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
          BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
          ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          SUB_DOMAIN: ${{ secrets.SUB_DOMAIN }}
          DOMAIN: ${{ secrets.DOMAIN }}

  cleanup_site_after_tests:
    runs-on: ubuntu-latest
    needs: run_tests

    steps:
      - uses: actions/checkout@v3

      - name: Cleanup Site
        if: always()
        run: ./cleanupSite.sh
        env:
          BASIC_AUTH_USERNAME: ${{ secrets.BASIC_AUTH_USERNAME }}
          BASIC_AUTH_PASSWORD: ${{ secrets.BASIC_AUTH_PASSWORD }}
          SUB_DOMAIN: ${{ secrets.SUB_DOMAIN }}
          DOMAIN: ${{ secrets.DOMAIN }}

      - name: Wait 10 seconds to allow site be cleared
        run: sleep 10
